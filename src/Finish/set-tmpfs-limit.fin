#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)set-tmpfs-limit.fin 3.8     05/04/08     SMI"
#
# This script installs a limit on the disk space that can be used as part of 
# a "tmpfs" filesystem.  This limit can help prevent the /tmp resource from
# being exhausted.  The usable space is limited by default by the value of
# the JASS_TMPFS_SIZE parameter.
#

logMessage "Setting limits on the usable size of the /tmp filesystem."
echo ""

if check_os_min_revision 5.6 ; then

   VFSTAB=${JASS_ROOT_DIR}etc/vfstab

   if [ -f ${VFSTAB} ]; then
      if [ `grep -c "tmpfs.*[ 	]*size=${JASS_TMPFS_SIZE}" ${VFSTAB}` = 0 ]; then

         backup_file ${VFSTAB}
         echo ""

         logMessage 'Setting the maximum tmpfs filesystem size to be ${JASS_TMPFS_SIZE}.'
   
         cat ${VFSTAB}.${JASS_SUFFIX} |\
            nawk ' $4 ~ /tmpfs/ {
               n = split($7, a, ",");
               found_size = 0;
               arg = "";
               if (a[1] ~ /\-/) {
                  arg="size="sizeStr;
               } else {
                  for (i = 1; i <= n; i++) {
                     if (a[i] ~ /^size=/) {      
                        found_size=1;
                        if (arg == "") {
                          arg = "size="sizeStr;
                       } else {
                          arg = arg",size="sizeStr;
                       }
                     } else {
                       if (arg == "") {
                          arg = a[i];
                       } else {
                          arg = arg","a[i];
                       }
                    }
                  }
                  if (found_size == 0) {
                     arg = arg",size="sizeStr;
                  }
               }
               printf("%s %s %s %s %s %s %s\n", $1, $2, $3, $4, $5, $6, arg);
               continue;
         } { print $0; }' sizeStr=${JASS_TMPFS_SIZE} > ${VFSTAB}
      fi 

   else
      logFileNotFound "${VFSTAB}"
   fi
else
   logInvalidOSRevision "5.6+"
fi
