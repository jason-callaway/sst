#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)set-user-password-reqs.fin	3.7	05/04/12 SMI"
#
# This script installs some basic password requirements for users.  Note
# that this effects local password policy only.

logMessage "Installing user password requirements."
echo ""

PASSWD=${JASS_ROOT_DIR}etc/default/passwd

if [ ! -f ${PASSWD} ]; then
   create_a_file -m 0444 -o root:sys ${PASSWD}
   echo ""
fi

changeToBeMade="0"

# Determine the values to be used.  If values are
# already in place, then use them.  Otherwise, use the
# defaults that are included below.

minWeeks=`nawk -F= '$1==keyword { print $2 }' keyword="MINWEEKS" ${PASSWD}`

if [ ! -z "${JASS_AGING_MINWEEKS}" ]; then
   if [ "${JASS_AGING_MINWEEKS}" != "${minWeeks}" ]; then
      changeToBeMade="1"
      if [ -z "${minWeeks}" ]; then
         minWeeks="NONE"
      fi
      logMessage 'Changing MINWEEKS   setting from ${minWeeks} to ${JASS_AGING_MINWEEKS}.'
   fi

   minWeeks="${JASS_AGING_MINWEEKS}"
fi

maxWeeks=`nawk -F= '$1==keyword { print $2 }' keyword="MAXWEEKS" ${PASSWD}`

if [ ! -z "${JASS_AGING_MAXWEEKS}" ]; then

   if [ "${JASS_AGING_MAXWEEKS}" != "${maxWeeks}" ]; then
      changeToBeMade="1"
      if [ -z "${maxWeeks}" ]; then
         maxWeeks="NONE"
      fi
      logMessage 'Changing MAXWEEKS   setting from ${maxWeeks} to ${JASS_AGING_MAXWEEKS}.'
   fi

   maxWeeks="${JASS_AGING_MAXWEEKS}"
fi

warnWeeks=`nawk -F= '$1==keyword { print $2 }' keyword="WARNWEEKS" ${PASSWD}`

if [ ! -z "${JASS_AGING_WARNWEEKS}" ]; then

   if [ "${JASS_AGING_WARNWEEKS}" != "${warnWeeks}" ]; then
      changeToBeMade="1"
      if [ -z "${warnWeeks}" ]; then
         warnWeeks="NONE"
      fi
      logMessage 'Changing WARNWEEKS  setting from ${warnWeeks} to ${JASS_AGING_WARNWEEKS}.'
   fi

   warnWeeks="${JASS_AGING_WARNWEEKS}"
fi

passLength=`nawk -F= '$1==keyword { print $2 }' keyword="PASSLENGTH" ${PASSWD}`

if [ ! -z "${JASS_PASS_LENGTH}" ]; then

   if [ "${JASS_PASS_LENGTH}" != "${passLength}" ]; then
      changeToBeMade="1"
      if [ -z "${passLength}" ]; then
         passLength="NONE"
      fi
      logMessage 'Changing PASSLENGTH setting from ${passLength} to ${JASS_PASS_LENGTH}.'
   fi

   passLength="${JASS_PASS_LENGTH}"
fi

if [ "${changeToBeMade}" = "1" ]; then

   echo ""
   backup_file ${PASSWD}

   # Remove the old entries and insert the new ones.

   cat ${PASSWD}.${JASS_SUFFIX} |\
      egrep -v '^MINWEEKS=|^MAXWEEKS=|^WARNWEEKS=|^PASSLENGTH=' > ${PASSWD}

   if [ ! -z "${JASS_AGING_MINWEEKS}" ]; then
      echo "MINWEEKS=${minWeeks}"      >> ${PASSWD}
   fi

   if [ ! -z "${JASS_AGING_MAXWEEKS}" ]; then
      echo "MAXWEEKS=${maxWeeks}"      >> ${PASSWD}
   fi

   if [ ! -z "${JASS_AGING_WARNWEEKS}" ]; then
      echo "WARNWEEKS=${warnWeeks}"    >> ${PASSWD}
   fi

   if [ ! -z "${JASS_PASS_LENGTH}" ]; then
      echo "PASSLENGTH=${passLength}"  >> ${PASSWD}
   fi

   chown root:sys ${PASSWD}
   chmod 0444     ${PASSWD}
fi
