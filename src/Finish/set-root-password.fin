#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)set-root-password.fin	3.11	05/04/20 SMI"
#
# This script is used to temporarily set the 'root' password for a system.  
# This is generally used as part of a fully automated Jumpstart installation.
#
# Note: This script will only run if the system is booted from the mini-root 
# (either from a CD or netimage).  
#
# Note: Be sure to change the 'root' password on all systems that use this 
# script to install a default password. 
#

SHADOW=${JASS_ROOT_DIR}etc/shadow

logMessage 'Setting the password for the \\\"root\\\" account.'
echo ""



if [ "${JASS_STANDALONE}" = "0" ]; then

   logMessage 'Setting the password for the \\\"root\\\" account to the value specified by
the \\\"JASS_ROOT_PASSWORD\\\" variable in ${SHADOW}.'
    echo ""

   backup_file ${SHADOW}

   nawk -F: '{ 
      if ( $1 == "root" ) 
         printf"%s:%s:%s:%s:%s:%s:%s:%s:%s\n",$1,passwd,$3,$4,$5,$6,$7,$8,$9
      else
         printf"%s:%s:%s:%s:%s:%s:%s:%s:%s\n",$1,$2,$3,$4,$5,$6,$7,$8,$9
   }' passwd="${JASS_ROOT_PASSWORD}" ${SHADOW}.${JASS_SUFFIX} > ${SHADOW}

   chown root:sys ${SHADOW}
   chmod 0400     ${SHADOW}

   # set the flag so sysidroot won't prompt for the root password
   rm -rf /tmp/state.$$
   sed -e 's/0	# root/1	# root/' "${SI_SYS_STATE}" > /tmp/state.$$
   mv /tmp/state.$$ "${SI_SYS_STATE}"

else
   logNotice "The system is not booted from mini-root, no changes made."
fi

if grep "^root::" ${SHADOW} >/dev/null 2>&1 ; then
   logWarning 'The \\\"root\\\" account currently does not have a password assigned.'
fi
