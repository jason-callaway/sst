#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident  "@(#)set-dtlogin-localonly.fin 1.8     07/02/05 SMI"
#
# This script prevents the Common Desktop Environment (CDE) service from
# listening for remote connections.  This will prevent any non local clients
# from connecting to the window service.
#
# If this ability is not provided by the Solaris OE, dtlogin will be disabled
# instead.
#

logMessage "Disabling remote connections for the service: Common Desktop Environment (CDE)"
echo ""

svc="svc:/application/graphical-login/cde-login"
# You can't check a service for existence on a running system, since a 
# dependency might have created it.  Instead, check the instance. 
svcinst="
   svc:/application/graphical-login/cde-login:default
"

lrc="lrc:/etc/rc2_d/S99dtlogin"

if check_sbd_available; then
   if  check_serviceInstalled "${svcinst}" 0 ; then 
      if check_serviceOptionEnabled "${svc}" "dtlogin/args" "" '-udpPort\\ 0' 0; then
	 : # udpPort is 0, nothing needs to be done
      else
	 value=""
	 get_service_property_value 0 "${svc}" "dtlogin/args"
	 # That functions returns its result in 'value'

	 # Clear any old udpPort value
	 newval=`echo ${value} | sed -e 's/-udpPort[ 	\\]*[0-9]*//'`
	 # clear any empty strings as well
	 newval=`echo ${newval} | sed -e 's/"//g'`

	 # And add -updPort 0 back in
	 newval="${newval} -udpPort\ 0"
	 set_service_property_value "${svc}" "dtlogin/args" "${newval}" \
	  "application" "astring"
      fi
   fi
elif check_os_revision 5.10 ; then
   if is_service_installed "${svcinst}" ; then
      chroot ${JASS_ROOT_DIR} /usr/dt/bin/dtconfig -d
      add_to_manifest X "/usr/dt/bin/dtconfig -e"

   elif [ -f ${JASS_ROOT_DIR}usr/dt/bin/dtconfig ]; then
      if [ -f ${JASS_ROOT_DIR}etc/rc2.d/S99dtlogin ]; then
         chroot ${JASS_ROOT_DIR} /usr/dt/bin/dtconfig -d
         add_to_manifest X "/usr/dt/bin/dtconfig -e"
      fi

   else
      disable_service "${lrc}"
   fi
elif check_os_min_revision 5.6 ; then
   if [ -f ${JASS_ROOT_DIR}usr/dt/bin/dtconfig ]; then
      if [ -f ${JASS_ROOT_DIR}etc/rc2.d/S99dtlogin ]; then
         chroot ${JASS_ROOT_DIR} /usr/dt/bin/dtconfig -d
         add_to_manifest X "/usr/dt/bin/dtconfig -e"
      fi

   else
      if [ "${JASS_KILL_SCRIPT_DISABLE}" = "1" ]; then
         disable_rc_file ${JASS_ROOT_DIR}etc/rcS.d K10dtlogin
         disable_rc_file ${JASS_ROOT_DIR}etc/rc0.d K10dtlogin
         disable_rc_file ${JASS_ROOT_DIR}etc/rc1.d K10dtlogin
      fi

      disable_rc_file ${JASS_ROOT_DIR}etc/rc2.d S99dtlogin
   fi
else
   logInvalidOSRevision "5.6+"
fi


