#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)install-shells.fin 3.6     04/06/02     SMI"
#
# This script creates the "/etc/shells" file that is used to restrict 
# access to the system.  In particular, this file is used by the 
# getusershell(3C) function to determine valid shells on the system. 
#
# Note that this script will only add the shell to the file if the 
# shell does not already exist in the file.
#

SHELLS=${JASS_ROOT_DIR}etc/shells

logMessage "Defining valid shells for this system."
echo ""

if [ ! -f ${SHELLS} ]; then
   create_a_file -m 644 -o root:sys ${SHELLS}
   echo ""
fi

backupPerformed="0"

# Note: shells in JASS_SHELLS are assumed to begin with / already


for NEW_SHELL in `echo ${JASS_SHELLS} | xargs -n 1 echo | sort -u`; do
   if [ -x ${JASS_ROOT_DIR}${NEW_SHELL} ]; then
      if [ `grep -c "^${NEW_SHELL}$" ${SHELLS}` = 0 ]; then
         if [ "${backupPerformed}" = "0" ]; then
            backup_file ${SHELLS}
            backupPerformed="1"
            echo ""
         fi
         logMessage 'Adding ${NEW_SHELL} to ${SHELLS}.'
         echo "${NEW_SHELL}" >> ${SHELLS}
      fi
   else
      logFileNotFound "${JASS_ROOT_DIR}${NEW_SHELL}"
   fi
done

if [ "${backupPerformed}" = "1" ]; then
   chown root:sys ${SHELLS}
   chmod 644      ${SHELLS}
fi
