#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident  "@(#)check-uids-unique.aud 1.1     06/12/21 SMI"
#

# ****************************************************************************
# Service definition section.
# ****************************************************************************

service="Unique User ID Check"
servfil="check-uids-unique.aud"

#-----------------------------------------------------------------------------

servhdr_txt="
Description of Service or Function:

   The purpose of this check is to identify any users on the system that
   have identical user identifiers (UIDs).

Rationale for Verification Check:

   Each user should be assigned to a unique UID in order to promote better
   accountability.   Users that share UIDs are effectively the same, but
   as far as the system is concerned, there is only one user with that
   UID (the first found in the naming service).  As a result, log files 
   may not indicate the true principal behind given actions or events.

   Note that by default in Solaris, each default user has a unique user
   identifier.  If this check fails, it will be a result of actions taken
   post-installation.

Determination of Compliance:

   This check reports a failure for each user found with a non-unique
   user identifier (UID).  Note that only one side of a pair will be
   logged for brevity.  So if users 'a' and 'b' share a common UID, then
   only one failure is recorded.   This will result is a more accurate 
   count of failures.
"

#-----------------------------------------------------------------------------

# **************************************************************************** 
# Check processing section.
# ****************************************************************************

start_audit "${servfil}" "${service}" "${servhdr_txt}"

infoList=`getent passwd | nawk -F: '{ print $1":"$3 }'`

processedList=""
for info in ${infoList}; do
   user=`echo ${info} | nawk -F: '{ print $1 }'`
   uid=`echo ${info} | nawk -F: '{ print $2 }'`

   # Look for a duplicate for this UID
   for match in `echo ${infoList} | xargs -n 1 echo | nawk -F: '{
      if ( ( $1 != cUser ) && ( $2 == cUID ) ) print $1;
      }' cUser="${user}" cUID="${uid}"`; do
      if [ `echo "${processedList}" | xargs -n 1 echo |\
         grep -c "^${match}:${user}:${uid}"` = 0 ]; then
         logFailure 'User ${user} has the same UID (${uid}) as ${match}.'
         adjustScore 1
         processedList="${processedList} ${user}:${match}:${uid}"
      fi
   done
done

if [ "${SCRIPT_SCORE}" = "0" ]; then
   logSuccess 'All user identifiers are unique.'
fi

finish_audit
