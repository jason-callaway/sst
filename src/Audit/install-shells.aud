#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)install-shells.aud 1.8     04/06/02     SMI"
#

# **************************************************************************** 
# Service definition section.
# **************************************************************************** 

service="Access Control (shells)"
servfil="install-shells.aud"

SHELLS="${JASS_ROOT_DIR}etc/shells"

#-----------------------------------------------------------------------------

servhdr_txt="
Description of Service or Function:

   The shells(4) file contains a list of the shells on the system.  
   Applications use this file to determine whether a specific shell is valid.
   For more information, see the getusershell(3C) documentation.  For each 
   shell a single line should be present, consisting of the shell's absolute 
   (fully-qualified) pathname.

Rationale for Verification Check:

   The list of valid user shells should be installed in the shells file.
   The FTP service among others will perform a getusershell(3C) check and 
   deny access to users who have shells not defined in this file.  Note
   that a default list is used by the system if this files does not exist.
   For a list of shells in that default list, see shells(4).   This script
   will check the ${SHELLS} file to determine if those shells listed in the 
   JASS_SHELLS parameter are all present.

Determination of Compliance:

   This script will indicate a failure if any shell defined by the JASS_SHELLS
   parameter is not already listed in the shells file.  The list of shells
   defined by JASS_SHELLS is:

`printPretty \"${JASS_SHELLS}\"`
"

# **************************************************************************** 
# Check processing section.
# ****************************************************************************

start_audit "${servfil}" "${service}" "${servhdr_txt}"

if check_fileExists ${SHELLS} 1; then
   for shell in `echo ${JASS_SHELLS} | xargs -n 1 echo | sort -u`; do
      if check_fileExists ${shell} 0 ; then
         if check_fileContentsExist "${SHELLS}" "^${shell}$" 1; then
            logSuccess 'Shell ${shell} exists in ${SHELLS}.'
         else
            logFailure 'Shell ${shell} does not exist in ${SHELLS}.'
         fi
      else
         logFileNotFound "${shell}"
      fi
   done
else
   logFileNotFound "${SHELLS}" 1
fi

finish_audit
