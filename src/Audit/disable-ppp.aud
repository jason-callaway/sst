#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident  "@(#)disable-ppp.aud 1.15     05/03/31 SMI"
#

# **************************************************************************** 
# Service definition section.
# **************************************************************************** 

service="Point-to-Point Protocol (PPP) Service"
servfil="disable-ppp.aud"

#-----------------------------------------------------------------------------

servhdr_txt="
Description of Service or Function:

   The Point-to-Point Protocol (PPP) service a method for transmitting 
   datagrams over serial point-to-point links.  PPP is comprised of three 
   components: a facility for  encapsulating datagrams over serial links, an 
   extensible link control protocol (LCP), and a family of network control 
   protocols (NCP) for establishing and configuring different network-layer
   protocols.

Rationale for Verification Check:

   While the PPP service can be a useful function, it may not be critical for
   system operation.  If this service is not needed, then it should be 
   disabled.

Determination of Compliance:

   This script determines if the PPP service is installed, configured or 
   running on the system.  This script will indicate a failure if the 
   software is installed, configured to run (via a run-control script) or 
   actually running on the system.
"

#-----------------------------------------------------------------------------

servpkg="
   SUNWpppd
   SUNWpppdr
   SUNWpppdt
   SUNWpppdu
   SUNWpppdx
   SUNWpppg
"

#-----------------------------------------------------------------------------

servsrc="
   ${JASS_ROOT_DIR}etc/rc2.d/S47pppd
"

#-----------------------------------------------------------------------------

servkrc="
   ${JASS_ROOT_DIR}etc/rcS.d/K50pppd
   ${JASS_ROOT_DIR}etc/rc0.d/K50pppd
   ${JASS_ROOT_DIR}etc/rc1.d/K50pppd
"

#-----------------------------------------------------------------------------

servcfg="
   ${JASS_ROOT_DIR}etc/ppp/pppoe.if
   ${JASS_ROOT_DIR}etc/ppp/pppoe
"

#-----------------------------------------------------------------------------

servcmd=" 
   /usr/bin/pppd
   /usr/lib/inet/pppoed
"

# **************************************************************************** 
# Check processing section.
# ****************************************************************************

start_audit "${servfil}" "${service}" "${servhdr_txt}"

if check_os_min_revision 5.8 ; then

   logMessage "${JASS_MSG_SOFTWARE_INSTALLED}"
   check_minimized                 "$servpkg"    1 LOG

   logMessage "\n${JASS_MSG_SOFTWARE_CONFIGURED}"

   if check_os_min_revision 5.10 ; then
      check_serviceNotInstalled lrc:/etc/rc2_d/S47pppd 1 LOG
   else

      if [ "${JASS_DISABLE_MODE}" = "conf" ]; then
         check_serviceConfigNotExists "$servcfg" 1 LOG
      elif [ "${JASS_DISABLE_MODE}" = "script" ]; then
         check_startScriptNotExists   "$servsrc" 1 LOG
         check_stopScriptNotExists    "$servkrc" 1 LOG
      fi

   fi

   logMessage "\n${JASS_MSG_SOFTWARE_RUNNING}"
   check_processNotExists          "$servcmd" 1 LOG

else
   logInvalidOSRevision "5.8+"
fi

finish_audit
