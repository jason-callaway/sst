#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)enable-password-changes.aud	1.2	07/01/30 SMI"
#

# ****************************************************************************
# Service definition section.
# ****************************************************************************

service="Enabled Password Policy"
servfil="enable-password-changes.aud"

#-----------------------------------------------------------------------------

SHADOW_FILE=${JASS_ROOT_DIR}/etc/shadow

servhdr_txt="
Rationale for Verification Check:

   While the set-user-password-reqs script changes the WEEKS
   parameters in /etc/default/passwd, it does not force accounts
   to use these new values until a password is changed.  This
   script will apply these new values to all unlocked non-root
   accounts on the system where these values are not in force.

Determination of Compliance:

   This script will return a failure if any unlocked non-root accounts
   do not have MINWEEKS/MAXWEEKS/WARNWEEKS set correctly on them, and
   the account password is not expired.
"

# ****************************************************************************
# Check processing section.
# ****************************************************************************

start_audit "${servfil}" "${service}" "${servhdr_txt}"

MAXDAYS=`echo ${JASS_AGING_MAXWEEKS} | awk '{print 7*$1}'`
MINDAYS=`echo ${JASS_AGING_MINWEEKS} | awk '{print 7*$1}'`
WARNDAYS=`echo ${JASS_AGING_WARNWEEKS} | awk '{print 7*$1}'`

if check_os_min_revision 5.10; then
   for USER in `egrep -v '^#|^$' ${SHADOW_FILE} | awk -F: '{print $1}'`; do
      if is_user_account_locked "${USER}"; then
	 : # nothing to do for locked accounts
      else
	 line=`egrep "^${USER}:" ${SHADOW_FILE}`
	 lastchg=`echo ${line} | awk -F: '{print $3}'`
	 mindays=`echo ${line} | awk -F: '{print $4}'`
	 maxdays=`echo ${line} | awk -F: '{print $5}'`
	 warndays=`echo ${line} | awk -F: '{print $6}'`

	 if [ ${USER} != "root" -a "${lastchg}" != "0" -a \( \
	      "${mindays}" != "${MINDAYS}" -o \
	      "${maxdays}" != "${MAXDAYS}" -o \
	      "${warndays}" != "${WARNDAYS}" \) ]; then
	    logFailure 'User ${USER} does not have the correct password policy'
	    adjustScore 1
	 fi
      fi
   done
else
   logInvalidOSRevision "5.10+"
fi
finish_audit
