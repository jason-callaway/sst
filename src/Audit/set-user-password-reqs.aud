#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)set-user-password-reqs.aud 1.7     04/06/02     SMI"
#

# **************************************************************************** 
# Service definition section.
# **************************************************************************** 

service="User Password Policy"
servfil="set-user-password-reqs.aud"

PASSWD="${JASS_ROOT_DIR}etc/default/passwd"

#-----------------------------------------------------------------------------

servhdr_txt="
Rationale for Verification Check:

   This purpose of this check is to verify that the password policy and 
   aging settings have been implemented in accordance with the Finish script,
   set-user-password-reqs.fin.  This script checks for the following 
   settings in the ${PASSWD} file:

      MINWEEKS   - The number of weeks required between password changes.

      MAXWEEKS   - The maximum number of weeks a password is valid.

      WARNWEEKS  - The number of weeks relative to MAXWEEKS before the 
                   password expires and the user is warned.
 
      PASSLENGTH - The minimum number of characters in a password.
 
Determination of Compliance:

   This check will review the password policy settings on the system as
   defined above.  This check will indicate an error if those parameters
   do not match the following values:

      MINWEEKS   - ${JASS_AGING_MINWEEKS}

      MAXWEEKS   - ${JASS_AGING_MAXWEEKS}

      WARNWEEKS  - ${JASS_AGING_WARNWEEKS}

      PASSLENGTH - ${JASS_PASS_LENGTH}
"

# **************************************************************************** 
# Check processing section.
# ****************************************************************************

start_audit "${servfil}" "${service}" "${servhdr_txt}"

if check_fileExists ${PASSWD} 1 ; then

   # MINWEEKS

   if check_fileContentsExist ${PASSWD} \
      "^MINWEEKS=${JASS_AGING_MINWEEKS}" 1 ; then
      logSuccess 'Password Aging MINWEEKS is set to ${JASS_AGING_MINWEEKS}.'
   else
      if check_fileContentsExist ${PASSWD} \
         "^MINWEEKS=" 0 ; then
         logFailure 'Password Aging MINWEEKS is not set to ${JASS_AGING_MINWEEKS}.'
      else
         logFailure 'Password Aging MINWEEKS is not set in ${PASSWD}.'
      fi
   fi

   # MAXWEEKS

   if check_fileContentsExist ${PASSWD} \
      "^MAXWEEKS=${JASS_AGING_MAXWEEKS}" 1 ; then
      logSuccess 'Password Aging MAXWEEKS is set to ${JASS_AGING_MAXWEEKS}.'
   else
      if check_fileContentsExist ${PASSWD} \
         "^MAXWEEKS=" 0 ; then
         logFailure 'Password Aging MAXWEEKS is not set to ${JASS_AGING_MAXWEEKS}.'
      else
         logFailure 'Password Aging MAXWEEKS is not set in ${PASSWD}.'
      fi
   fi

   # WARNWEEKS

   if check_fileContentsExist ${PASSWD} \
      "^WARNWEEKS=${JASS_AGING_WARNWEEKS}" 1 ; then
      logSuccess 'Password Aging WARNWEEKS is set to ${JASS_AGING_WARNWEEKS}.'
   else
      if check_fileContentsExist ${PASSWD} \
         "^WARNWEEKS=" 0 ; then
         logFailure 'Password Aging WARNWEEKS is not set to ${JASS_AGING_WARNWEEKS}.'
      else
         logFailure 'Password Aging WARNWEEKS is not set in ${PASSWD}.'
      fi
   fi

   # PASSLENGTH

   if check_fileContentsExist ${PASSWD} \
      "^PASSLENGTH=${JASS_PASS_LENGTH}" 1 ; then
      logSuccess 'Password Policy PASSLENGTH is set to ${JASS_PASS_LENGTH}.'
   else
      if check_fileContentsExist ${PASSWD} \
         "^PASSLENGTH=" 0 ; then
         logFailure 'Password Policy PASSLENGTH is not set to ${JASS_PASS_LENGTH}.'
      else
         logFailure 'Password Policy PASSLENGTH is not set in ${PASSWD}.'
      fi
   fi

else
   logFileNotFound "${PASSWD}" 1
fi

finish_audit
