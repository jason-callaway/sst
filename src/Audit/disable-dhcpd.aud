#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the License).
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/CDDL.txt
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/CDDL.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets [] replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident  "@(#)disable-dhcpd.aud 1.12     05/03/30 SMI"
#

# **************************************************************************** 
# Service definition section.
# **************************************************************************** 

service="DHCP Service"
servfil="disable-dhcpd.aud"

#-----------------------------------------------------------------------------

servhdr_txt="
Description of Service or Function:

   The Dynamic Host Configuration Protocol (DHCP) service responds to client
   requests by providing configuration information.  Typically clients are
   allocated IP addresses, default routes or other information using this
   mechanism.  The dhcpd(1M) server provides this functionality for the
   system.

Rationale for Verification Check:

   While the DHCP (server) service can be a useful function, it may not be
   critical for system operation.  If this service is not needed, then it 
   should be disabled.

Determination of Compliance:

   This script determines if the DHCP (server) service is installed, configured 
   or running on the system.  This script will indicate a failure if the
   software is installed, configured to run (via a run-control script) or 
   actually running on the system.
"

#-----------------------------------------------------------------------------

servpkg="
   SUNWdhcsr SUNWdhcsu
"

#-----------------------------------------------------------------------------

servsrc="
   ${JASS_ROOT_DIR}etc/rc3.d/S34dhcp
"

#-----------------------------------------------------------------------------

servkrc="
   ${JASS_ROOT_DIR}etc/rcS.d/K21dhcp
   ${JASS_ROOT_DIR}etc/rcS.d/K34dhcp
   ${JASS_ROOT_DIR}etc/rc0.d/K21dhcp
   ${JASS_ROOT_DIR}etc/rc0.d/K34dhcp
   ${JASS_ROOT_DIR}etc/rc1.d/K21dhcp
   ${JASS_ROOT_DIR}etc/rc1.d/K34dhcp
   ${JASS_ROOT_DIR}etc/rc2.d/K21dhcp
   ${JASS_ROOT_DIR}etc/rc2.d/K34dhcp
"

#-----------------------------------------------------------------------------

servcfg="
   ${JASS_ROOT_DIR}etc/inet/dhcpsvc.conf
"

#-----------------------------------------------------------------------------

servcmd="
   /usr/lib/inet/in.dhcpd
"
svc="
   svc:/network/dhcp-server:default
"

# **************************************************************************** 
# Check processing section.
# **************************************************************************** 

start_audit "${servfil}" "${service}" "${servhdr_txt}"
logMessage "${JASS_MSG_SOFTWARE_INSTALLED}"

if check_os_min_revision 5.10 ; then
   check_minimized_service "${svc}" 1 LOG
   logMessage "\n${JASS_MSG_SOFTWARE_ENABLED}"
   check_serviceDisabled "${svc}" 1 LOG  
   logMessage "\n${JASS_MSG_SOFTWARE_RUNNING}"
   check_serviceNotRunning "${svc}"  1 LOG
elif check_os_min_revision 5.8 ; then

   logMessage "${JASS_MSG_SOFTWARE_INSTALLED}"
   check_minimized              "$servpkg"  1 LOG

   logMessage "\n${JASS_MSG_SOFTWARE_CONFIGURED}"
   if [ "${JASS_DISABLE_MODE}" = "conf" ]; then
      check_serviceConfigNotExists "$servcfg"  1 LOG
   elif [ "${JASS_DISABLE_MODE}" = "script" ]; then
      check_startScriptNotExists   "$servsrc"  1 LOG
      check_stopScriptNotExists    "$servkrc"  1 LOG
   fi

   logMessage "\n${JASS_MSG_SOFTWARE_RUNNING}"
   check_processNotExists       "$servcmd"  1 LOG

else
   logInvalidOSRevision "5.8+"
fi

finish_audit
